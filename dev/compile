#!/bin/bash

task="A"
flagtype="n"
flags="-O2 -Wall -Wextra"
language="cpp"

while [[ $# -gt 0 ]]
do
    option="$1"
    case $option in
        -f)
            flagtype="$2"
            shift 2
            ;;
        -l)
            language="$2"
            shift 2
            ;;
        -t)
            task="$2"
            shift 2
            ;;
        *)
            task="$1"
            shift 1
            ;;
    esac
done

case $flagtype in
    o)
        flags="-O3 -mavx2 -Wall -Wextra"
        ;;
    v)
        flags="-O2 -Wall -Wextra -Wshadow -fsanitize=address -fsanitize=undefined -fno-sanitize-recover -Wshift-overflow=2"
        ;;
    d)
        flags="-Wall -Og -g"
        ;;
    n)
        flags="-O2 -Wall -Wextra"
        ;;
    *)
        flags="-O2 -Wall -Wextra"
        ;;
esac

mkdir -p bin
stay="echo done; bash -c \"read var\""

case $language in
    cpp)
        gnome-terminal -- bash -c "g++ -std=c++17 $flags tasks/cpp/$task.cpp -o bin/$task; $stay;"
        ;;
    rust)
        cp tasks/rust/${task}.rs rust/src/main.rs
        gnome-terminal -- bash -c "(cd rust && cargo build); $stay; cp rust/target/debug/contest bin/$task"
        ;;
    python)
        gnome-terminal -- bash -c "time python3 tasks/python/$task.py; $stay;"
        ;;
esac
