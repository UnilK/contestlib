#!/bin/bash

range=6
cpp=1
python=0
rust=0

while [[ $# -gt 0 ]]
do    
    option="$1"
    case $option in
        -py)
            python=1
            shift 1
            ;;
        -pyy)
            python=1
            cpp=0
            shift 1
            ;;
        -rs)
            rust=1
            shift 1
            ;;
        -rss)
            rust=1
            cpp=0
            shift 1
            ;;
        *)
            if [[ $1 =~ [0-9] ]]
            then
                range=$(( 1+($1-1)%26 ))
            else
                letter=$(echo $1|head -c 1|tr '[:upper:]' '[:lower:]')
                range=$(printf "%d" "'$letter")
                range=$(( 1+($range-97)%26 ))
            fi
            shift 1
            ;;
    esac
done

mkdir -p tests
mkdir -p tasks
mkdir -p old
mkdir -p old/old0
mkdir -p old/old1
mkdir -p old/old2
mkdir -p old/old3
mkdir -p old/old4

rm -rf old/old4/*
cp -rf old/old3/* old/old4
rm -rf old/old3/*
cp -rf old/old2/* old/old3
rm -rf old/old2/*
cp -rf old/old1/* old/old2
rm -rf old/old1/*
cp -rf old/old0/* old/old1
rm -rf old/old0/*
cp -rf tasks tests old/old0

rm -f tasks/*
rm -f tests/*

alphabet=( {A..Z} )

if [ $cpp -eq 1 ];
then
    for ((i=0; i<range; i++)) 
    do
        cp lib/cpp/template.cpp tasks/${alphabet[i]}.cpp
    done
fi

if [ $python -eq 1 ];
then
    for ((i=0; i<range; i++)) 
    do
        touch tasks/${alphabet[i]}.py
    done
fi

if [ $rust -eq 1 ];
then
    for ((i=0; i<range; i++)) 
    do
        cp lib/rs/template.rs tasks/${alphabet[i]}.rs
    done
fi

vim -S dev/.vimrc -p tasks/*

